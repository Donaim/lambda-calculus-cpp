

id = \x -> x

0 = $mint id
1 = $msuc 0
2 = $msuc 1
3 = $msuc 2
4 = $msuc 3
5 = $msuc 4
6 = $msuc 5
7 = $msuc 6
8 = $msuc 7

$pbooly $booly

[] = id $mlist

fin = $cons 1 ($cons 2 ($cons 4 ($cons 3 [])))

genlist = \f n0 ->
	$cons (f n0) (genlist f ($msuc n0))

at = \n l ->
	$mif ($mis0 n)
	($head l)
	(at ($mdec n) ($tail l))

fold = \f l acc ->
	$mif ($mnil l)
	acc
	(fold f ($tail l) (f acc ($head l)))

sum     = \l -> fold $add  l 0
product = \l -> fold $mult l 1
length  = \l -> fold $msuc l 0

take = \n l ->
	$mif ($mis0 n)
	[]
	($cons ($head l) (take ($mdec n) ($tail l)))

N = genlist id 1

sum4 = sum (take 4 N)

$pmint (at 2 fin)

$pmint ($head N) # = 0

$pmint (at 8 N)

$pmint (sum     (take 7 N))
$pmint (product (take 7 N))

$pmint (sum fin)

$pmint ($head fin)

$pmint (length fin)
