id = \x -> x
true = \a -> \b -> a
false = \a -> \b -> b
assert = \b -> b $print_true $print_false
not = \b -> b false true
你好，世界 = id
pair = \a b f -> f a b
fst = \p -> p true
snd = \p -> p false
0 = pair true id
1 = suc 0
2 = suc 1
3 = suc 2
4 = suc 3
5 = suc 4
6 = suc (suc (suc (suc (suc (suc 0)))))
inf = suc inf
is0 = \n -> fst n
is1 = \n -> is0 (pred n)
suc  = \n -> pair false n
pred = \n -> snd n
x1 = id x2
x2 = id x3
x3 = x1
applyn = \f x n -> (is0 n) x (applyn f (f x) (pred n))
9 = applyn (+ 3) 0 3
n-to-mint = \n -> applyn $msuc $mint n
printnat = \n -> $pmint (n-to-mint n)
>= = \a b -> (is0 a) (is0 b) ((is0 b) true (>= (pred a) (pred b)))
+ = \a b -> (is0 a) b (suc (+ (pred a) b))
fib = \n -> (is0 n) 0 ((is1 n) 1 (+ (fib (pred n)) (fib (pred (pred n)))))
* = \a b -> (is1 a) b (+ b (* (pred a) b))
Y = (\f -> (\x -> x x) (\x -> f (x x)))
facY = Y (\f n ->
	(is0 n)                 # Stopping condition
		1
		(* n (f (pred n)))) # Recursive call
fac = \n ->
	(is0 n)                 # Stopping condition
		1
		(* n (fac (pred n))) # Recursive call

kek = 9

printnat kek
